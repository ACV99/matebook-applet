language: go

go:
  - 1.13.x

os: linux

dist: bionic

addons:
  apt:
    packages:
      - libappindicator3-dev
      - libgtk-3-dev
      - aptly
      - gnupg1
      - rsync

env:
  - GO111MODULE=on

install:

before_script:
  - go install github.com/golangci/golangci-lint/cmd/golangci-lint
  - go generate

script:
  - golangci-lint run
  - git reset --hard
  - go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
  - go run build.go

before_deploy:
  - openssl aes-256-cbc -K $encrypted_6a908c0ed538_key -iv $encrypted_6a908c0ed538_iv -in secrets.tar.enc -out secrets.tar -d
  - tar xvf secrets.tar
  - mv id_rsa ~/.ssh/
  - cat .known_hosts >> $HOME/.ssh/known_hosts
  - gpg --batch --passphrase $GPG_PASSPHRASE --pinentry-mode loopback --import gpgsecret.asc
  - echo -e "5\ny\n" | gpg --command-fd 0 --expert --edit-key F25E85CB21A79726 trust;
  - go get github.com/itchio/gothub@master
  - gem install fpm
  - gpg1 --no-default-keyring --keyring trustedkeys.gpg --keyserver pool.sks-keyservers.net --recv-keys 79B2B092A63F5E6F
  - gpg1 --no-default-keyring --keyring trustedkeys.gpg --import matebook-applet.key
  - aptly mirror create repo http://evgenykuznetsov.org/repo buster
  - aptly mirror update repo
  - aptly repo create -distribution="buster" matebook-applet
  - aptly repo import repo matebook-applet Name
  - git reset --hard

deploy:
  - provider: script
    script: rvm default do go run release.go
    on:
      tags: true
  - provider: script
    script: go run release.go -c
    on:
      condition: $TRAVIS_EVENT_TYPE = cron

cache:
  directories:
    - $HOME/.cache/go-build
    - $HOME/gopath/pkg/mod

after_success:
  - bash <(curl -s https://codecov.io/bash)
